import time

from telethon.tl.types import ChannelParticipantAdmin
import json
from telethon.tl.custom.button import Button

from thon.client import client

bot = None
first = []
groups_to_mailing = []
links = []
auth_users = [124170194, 5666040482, 1968537111, 5666040482, 394067184, 141500416]


async def start(event):
    chat = event.message.chat_id
    await bot.send_message(chat, '–Ø –±–æ—Ç –∏ —è –Ω–µ –∑–¥–æ—Ä–æ–≤–∞—é—Å—å,'
                                   '—è —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω—è—é —Ç–≤–æ–∏ –∫–æ–º–º–∞–Ω–¥—ã. \n\n'
                                   '–¢—ã —Ö–æ—á–µ—à—å –∑–Ω–∞—Ç—å, —á—Ç–æ —è –º–æ–≥—É?',
                           buttons=[Button.inline('–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç', b'post'),
                                    Button.inline('Groups', b'groups')]) \
        if event.chat_id in auth_users else await client(event=event, bot=bot)


async def main_menu(event):
    if event.data == b'exit' or event.data == b'no':
        SENDER = (await event.get_sender()).id
        await bot.send_message(SENDER, '–Ø –±–æ—Ç –∏ —è –Ω–µ –∑–¥–æ—Ä–æ–≤–∞—é—Å—å,'
                                       '—è —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω—è—é —Ç–≤–æ–∏ –∫–æ–º–º–∞–Ω–¥—ã. \n\n'
                                       '–¢—ã —Ö–æ—á–µ—à—å –∑–Ω–∞—Ç—å, —á—Ç–æ —è –º–æ–≥—É?',
                                       buttons=[Button.inline('–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç', b'post'),
                                                Button.inline('Groups', b'groups')]) \
            if SENDER in auth_users else print("–ö—Ç–æ-—Ç–æ –ª–µ–≤—ã–π –ø–∏—à–µ—Ç –≤ –±–æ—Ç–∞")


async def form_info(event):
    SENDER = (await event.get_sender()).id
    if event.data == b'post':
        chat = await event.get_chat()
        async with bot.conversation(chat) as conv:
            await conv.send_message('–ù–µ—á–µ–º —Ç–µ–±–µ –∑–∞–Ω—è—Ç—å—Å—è, —Ä–µ—à–∏–ª –º–µ–Ω—è –∑–∞–µ–±–∞—Ç—å —Ç–æ–∂–µ...  \n\n'
                                    'üñº–ó–ê–ì–†–£–ó–ò –§–û–¢–û–ì–†–ê–§–ò–Æ –ü–û–°–¢–ê')
            first.append(await conv.get_response())

            await conv.send_message('–° —ç—Ç–∏–º —Å–ø—Ä–∞–≤–∏–ª—Å—è, –ø–æ—Ö–≤–∞–ª—å–Ω–æ...  \n\n'
                                    'üìù–ù–ê–ü–ò–®–ò –¢–ï–ö–°–¢ –ü–û–°–¢–ê –ò–õ–ò –°–ö–û–ü–ò–†–£–ô –£ –ö–û–ì–û –ò –ü–†–ò–®–õ–ò –ú–ù–ï')
            first.append((await conv.get_response()).raw_text)

            await conv.send_message('–ú—ã —É–∂–µ –∑–∞—à–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ...\n\n'
                                    'üóÇ–í–´–ë–ï–†–ò –®–ê–ë–õ–û–ù –ö–ù–û–ü–û–ö –ö–û–¢–û–†–´–ï –ë–£–î–£–¢ –ü–û–î –ü–û–°–¢–û–ú')

            file_paths = ['templates/img/1.jpeg', 'templates/img/2.jpeg', 'templates/img/3.jpeg', 'templates/img/4.jpeg', 'templates/img/5.jpeg']
            [await bot.upload_file(file_path) for file_path in file_paths]
            [await bot.send_file(chat, file_path, caption=file_path[14]) for file_path in file_paths]

            nums = ['1','2','3','4','5']
            await bot.send_message(chat, '–ú–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ü–∏—Ñ—Ä—É - 1,2,3,4,5',
                                   buttons=[Button.text(text=num, resize=True, single_use=True) for num in nums])

            form = (await conv.get_response()).raw_text
            if int(form) == 1:
                first_paths = ['templates/img/1/11.jpeg', 'templates/img/1/12.jpeg', 'templates/img/1/13.jpeg']
                [await bot.upload_file(first_path) for first_path in first_paths]
                await bot.send_file(chat, 'templates/img/1.jpeg', caption="–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω, —Ç—É—Ç —Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏ –∏ —Ç—Ä–∏ —Å—Å—ã–ª–∫–∏")

                for first_path in first_paths:
                    await bot.send_file(chat, first_path, caption=f"–í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É –¥–ª—è {first_path[17]} –∫–Ω–æ–ø–∫–∏")
                    links.append((await conv.get_response()).raw_text)

                await bot.send_message(chat, "–ö–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç —Ç–∞–∫ –≤—ã–≥–ª—è–¥–µ—Ç—å",
                                       buttons=[[Button.url('üíå WRITE TO ME üíå', url=links[-3])],
                                                [Button.url('üå∏ MY CHANNEL üå∏', url=links[-2])],
                                                [Button.url('üí¶ MY üîû ONLYFANS', url=links[-1])]])
            if int(form) == 2:
                second_paths = ['templates/img/2/21.jpeg', 'templates/img/2/22.jpeg', 'templates/img/2/23.jpeg']
                [await bot.upload_file(second_path) for second_path in second_paths]
                await bot.send_file(chat, 'templates/img/2.jpeg', caption="–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ç–æ—Ä–æ–π —à–∞–±–ª–æ–Ω, —Ç—É—Ç —Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏ –∏ —Ç—Ä–∏ —Å—Å—ã–ª–∫–∏")

                for second_path in second_paths:
                    await bot.send_file(chat, second_path, caption=f"–í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É –¥–ª—è {second_path[17]} –∫–Ω–æ–ø–∫–∏")
                    links.append((await conv.get_response()).raw_text)

                await bot.send_message(chat, "–ö–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç —Ç–∞–∫ –≤—ã–≥–ª—è–¥–µ—Ç—å",
                                       buttons=[[Button.url('üíå WRITE TO ME üíå', url=links[-3])],
                                                [Button.url('üîû MY 18+ CONTENT üîû', url=links[-2])],
                                                [Button.url('üí¶üî• MY PRIVATE GROUP üî•üí¶', url=links[-1])]])
            if int(form) == 3:
                third_paths = ['templates/img/3/31.jpeg', 'templates/img/3/32.jpeg', 'templates/img/3/33.jpeg']
                [await bot.upload_file(third_path) for third_path in third_paths]
                await bot.send_file(chat, 'templates/img/3.jpeg', caption="–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç—Ä–µ—Ç–∏–π —à–∞–±–ª–æ–Ω, —Ç—É—Ç —Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏ –∏ —Ç—Ä–∏ —Å—Å—ã–ª–∫–∏")

                for third_path in third_paths:
                    await bot.send_file(chat, third_path, caption=f"–í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É –¥–ª—è {third_path[17]} –∫–Ω–æ–ø–∫–∏")
                    links.append((await conv.get_response()).raw_text)


                await bot.send_message(chat, "–ö–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç —Ç–∞–∫ –≤—ã–≥–ª—è–¥–µ—Ç—å",
                                       buttons=[[Button.url('üíå WRITE TO ME üíå', url=links[-3])],
                                                [Button.url('üå∏ FREE GIRLS TODAY üå∏', url=links[-2])],
                                                [Button.url('üìçREAL LOCAL FUCK üíØ', url=links[-1])]])
            if int(form) == 4:
                fourth_paths = ['templates/img/4/41.jpeg', 'templates/img/4/42.jpeg']
                [await bot.upload_file(fourth_path) for fourth_path in fourth_paths]
                await bot.send_file(chat, 'templates/img/4.jpeg', caption="–í—ã –≤—ã–±—Ä–∞–ª–∏ —á–µ—Ç–≤–µ—Ä—Ç—ã–π —à–∞–±–ª–æ–Ω, —Ç—É—Ç —Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏ –∏ —Ç—Ä–∏ —Å—Å—ã–ª–∫–∏")

                for fourth_path in fourth_paths:
                    await bot.send_file(chat, fourth_path, caption=f"–í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É –¥–ª—è {fourth_path[17]} –∫–Ω–æ–ø–∫–∏")
                    links.append((await conv.get_response()).raw_text)
                await bot.send_message(chat, "–ö–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç —Ç–∞–∫ –≤—ã–≥–ª—è–¥–µ—Ç—å",
                                       buttons=[[Button.url('üòè WANT TO JOIN ME? üòè', url=links[-2])],
                                                [Button.url('üòà FUCK A MILF FRIDAY? üòà', url=links[-1])]])
            if int(form) == 5:
                fifth_paths = ['templates/img/5/51.jpeg', 'templates/img/5/52.jpeg', 'templates/img/5/53.jpeg']
                [await bot.upload_file(fifth_path) for fifth_path in fifth_paths]
                await bot.send_file(chat, 'templates/img/5.jpeg', caption="–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—è—Ç—ã–π —à–∞–±–ª–æ–Ω, —Ç—É—Ç —Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏ –∏ —Ç—Ä–∏ —Å—Å—ã–ª–∫–∏")

                for fifth_path in fifth_paths:
                    await bot.send_file(chat, fifth_path, caption=f"–í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É –¥–ª—è {fifth_path[17]} –∫–Ω–æ–ø–∫–∏")
                    links.append((await conv.get_response()).raw_text)
                await bot.send_message(chat, "–ö–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç —Ç–∞–∫ –≤—ã–≥–ª—è–¥–µ—Ç—å",
                                       buttons=[[Button.url('üçë SEX DISCOUNTS üçë', url=links[-3])],
                                                [Button.url('üíØ LOCAL SINGLE WOMAN üíØ', url=links[-2])],
                                                [Button.url('üé• LIVE CAM 18+ (FREE) üé•', url=links[-1])]])

            first.append(form)
            first.append(links)
            print(first)

            await bot.send_message(SENDER, '–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è –∏ –ø–æ—Å—Ç –≥–æ—Ç–æ–≤.  \n'
                                           'üî¥–û–ü–£–ë–õ–ò–ö–û–í–ê–¢–¨ –ü–û–°–¢?',
                                   buttons=[Button.inline('–î–∞', b'ok'),
                                            Button.inline('–ù–µ—Ç', b'no')])


async def post_groups(event):
    if event.data == b'ok':
        sender = await event.get_sender()
        SENDER = sender.id
        await bot.send_message(SENDER, "–ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", buttons=[Button.inline('–í—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', b'exit')])
        print(first)
        with open('chat_ids.txt', 'r') as f:
            for group in f:
                if int(first[-2]) == 1:
                    await bot.send_file(
                        int(group.strip()[1:11]),
                        first[-4],
                        caption=first[-3],
                        force_document=False,
                        buttons=[[Button.url('üíå WRITE TO ME üíå', url=links[-3])],
                                 [Button.url('üå∏ MY CHANNEL üå∏', url=links[-2])],
                                 [Button.url('üí¶ MY üîû ONLYFANS', url=links[-1])]])
                elif int(first[-2]) == 2:
                    await bot.send_file(
                        int(group.strip()[1:11]),
                        first[-4],
                        caption=first[-3],
                        force_document=False,
                        buttons=[[Button.url('üíå WRITE TO ME üíå', url=links[-3])],
                                 [Button.url('üîû MY 18+ CONTENT üîû', url=links[-2])],
                                 [Button.url('üí¶üî• MY PRIVATE GROUP üî•üí¶', url=links[-1])]])
                elif int(first[-2]) == 3:
                    await bot.send_file(
                        int(group.strip()[1:11]),
                        first[-4],
                        caption=first[-3],
                        force_document=False,
                        buttons=[[Button.url('üíå WRITE TO ME üíå', url=links[-3])],
                                 [Button.url('üå∏ FREE GIRLS TODAY üå∏', url=links[-2])],
                                 [Button.url('üìçREAL LOCAL FUCK üíØ', url=links[-1])]])
                elif int(first[-2]) == 4:
                    await bot.send_file(
                        int(group.strip()[1:11]),
                        first[-4],
                        caption=first[-3],
                        force_document=False,
                        buttons=[[Button.url('üòè WANT TO JOIN ME? üòè', url=links[-2])],
                                 [Button.url('üòà FUCK A MILF FRIDAY? üòà', url=links[-1])]])
                elif int(first[-2]) == 5:
                    await bot.send_file(
                        int(group.strip()[1:11]),
                        first[-4],
                        caption=first[-3],
                        force_document=False,
                        buttons=[[Button.url('üçë SEX DISCOUNTS üçë', url=links[-3])],
                                 [Button.url('üíØ LOCAL SINGLE WOMAN üíØ', url=links[-2])],
                                 [Button.url('üé• LIVE CAM 18+ (FREE) üé•', url=links[-1])]])


async def show_groups(event):
    chat = await event.get_chat()
    if event.data == b'groups':
        with open('chat_ids.txt', 'r') as f:
            for group in f:
                await bot.send_message(chat, group[1:-2])


async def write_file(update):
    print(type(update))
    try:
        if type(update.new_participant) == ChannelParticipantAdmin:
            with open('chat_ids.txt', 'a') as f:
                data = dict()
                chat = await bot.get_entity(update.channel_id)
                data[update.channel_id] = chat.title
                f.write(str(data) + "\n")
                if update.channel_id not in groups_to_mailing:
                    print("–ë–æ—Ç–∞ –¥–æ–±–∞–≤–∏–ª–∏ –∏ –æ–Ω –∞–¥–º–∏–Ω")
            with open('chat.txt', 'w') as k:
                json.dump(data, k)

    except:
        pass
